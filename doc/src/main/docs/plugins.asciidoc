---
title: Plugins
---

include::content/docs/variables.adoc-include[]

== Free Plugins

None yet

== Commercial Plugins

The following list contains commercial plugins which are not open source.

=== Favourites Plugin

The favourites plugin provides an API that can be used to store and retrieve user specific favourites lists.

==== API

Read favorite list of the type:

* `GET /favorite/:type`

Update the list for the given type:

* `POST "/favorite/:type`

```json
{
  "favorites" : [ "259fffb2519549a69fffb2519509a69f", "e615321571424ec29532157142eec226" ]
}
```

=== Comments Plugin

The comments plugin provides an API that can be used to implement a comment feature.

==== API

The API can be used to create, read, update, delete, approve and reject comments.

Create comments:

* `POST /comments`

```json
{
  "comment" : "This is the comment",
  "node" : "7e668d59d6cd46bfa68d59d6cdb6bf5c",
  "language" : "en",
  "parentComment" : {
    "present" : true
  }
}
```

Read comments:

* `GET /comments/:uuid` - Load the comment

```json
{
  "comment" : "This is the comment",
  "status" : "approved",
  "authorReference" : "03c999249f5840f88999249f58d0f8c2",
  "hidden" : false,
  "version" : "0.1",
  "language" : "en",
  "uuid" : "88486790171e4f06886790171e8f065e",
  "container" : true,
  "schema" : {
    "name" : "comment",
    "uuid" : "cfe353c3fe324171a353c3fe32d17190",
    "version" : null
  },
  "created" : "2018-10-08T12:38:01.858Z",
  "parentNode" : null,
  "tags" : [ ],
  "childrenInfo" : { },
  "displayField" : null,
  "displayName" : null,
  "project" : null,
  "availableLanguages" : null,
  "languagePaths" : null,
  "path" : null,
  "breadcrumb" : [ ],
  "creator" : null,
  "editor" : null,
  "edited" : null,
  "fields" : {
    "node" : {
      "status" : {
        "string" : "approved",
        "type" : "string"
      },
      "authorReference" : {
        "string" : "03c999249f5840f88999249f58d0f8c2",
        "type" : "string"
      },
      "hidden" : {
        "value" : false,
        "type" : "boolean"
      },
      "comment" : {
        "string" : "This is the comment",
        "type" : "string"
      },
      "email" : {
        "string" : "dummy@domain.tld",
        "type" : "string"
      },
      "author" : {
        "string" : "Joe Doe",
        "type" : "string"
      },
      "subject" : {
        "string" : "Test subject for my comment",
        "type" : "string"
      }
    }
  }
}
```


* `GET /node/:uuid/comments` - Load the comments for the given node

Update comments:

* `POST /comments/:uuid`

```json
{
    "email": "dummy@domain.tld",
    "author": "Joe Doe",
    "subject": "Test subject for my comment",
    "comment": "This is the comment",
    "hidden": false,
    "status": "approved"
}
```

Delete comments:

* `DELETE /comment/:uuid`

Publish comments:

* `POST /comments/:uuid/publish`

Unpublish comments:

* `POST /comments/:uuid/unpublish`

=== Likes Plugin

The likes plugin can be used to store and retrieve information about likes of your contents.
An API can be used to retrieve likes and update likes of your contents.

The plugin can deal with differnt types: 

* `like` - Typical single toggle like
* `plusminus` - Like/Dislike
* `rating` - Absolute rating of the content

It is possible to configure the type on a per-node (e.g. per page) level.

==== API

Post a like:

* `POST /likes/:nodeUuid/:lang`

Return the like status for the node and language:

* `GET /likes/:nodeUuid/:lang`

```json
{
  "configuration" : {
    "active" : false,
    "type" : "rating",
    "maxRating" : 10,
    "baseUrl" : "/"
  },
  "posted" : {
    "rating" : 10,
    "plusMinus" : "plus",
    "like" : true
  }
}
```

Remove a like:

* `DELETE /likes/:nodeUuid/:lang`

Statistics:

* `GET /likes/:nodeUuid/:lang/statistics`

The statistics response contains information about individual likes. That way you can quickly determine how many likes of a specific type a node received.




